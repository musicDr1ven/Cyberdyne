{"ts":1401161106620,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1401161154619,"patch":[[{"diffs":[[1,"var flatiron = require('flatiron')\n  , app = flatiron.app,\n  fs = require('fs');\nvar Plates = require('plates');\n\n\nvar getConference = function () {\n  var req = this.req\n    , res = this.res\n  res.writeHead(200, { 'content-type': 'text/html' });\n  \n // var template = fs.readFileSync(__dirname.replace('controllers','views/index.html'), \"utf-8\");\n//var partial = fs.readFileSync(__dirname.replace('controllers','views/partials/frontpage.html', \"utf-8\"));\n\n// Render the partial into main.\n// The data-key in the second param is matched to the id in the template.\n// Plates renders the corresponding value - in this case the contents of\n// partial.html - between the start and end tags with this id.\n\nvar html = fs.readFileSync(__dirname.replace('controllers','views/public/index.html'), \"utf-8\");\nvar partial = fs.readFileSync(__dirname.replace('controllers','views/partials/desktop.html'), \"utf-8\");\nvar data = { \"mainContent\": partial };\n\nvar output = Plates.bind(html, data); \n\n\n\n\n  res.html(output);\n}\n\nmodule.exports.init = function () {\n  app.router.get('/conference', getConference);\n  \n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1096}]],"length":1096,"saved":false}
